openapi: 3.0.0
servers:
  - url: "https://{environment}.newapp.com.vn"
    variables:
      environment:
        default: api
        enum:
          - api
          - api-dev
          - api-qa
info:
  description: >-
    This is a sample server Petstore server. For this sample, you can use the
    api key `special-key` to test the authorization filters.
  version: 1.0.0
  title: OpenAPI Petstore
  license:
    name: Apache-2.0
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"
paths:
  /identity/auth/status:
    post:
      operationId: loginByEmailOrPhone
      description: Login status
      tags:
        - Auth
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginParameters"
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  data:
                    type: object
                    properties:
                      result:
                        type: object
                        properties:
                          unblockAt:
                            type: string
                            default: ""
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  /connect/token:
    post:
      summary: Login Form Encoded
      operationId: loginFormEncoded
      description: Info for a specific pet
      tags:
        - Auth
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/LoginEncodedParameters"
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: object
                description: Error
                properties:
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                    default: ""
                  expires_in:
                    type: integer
                    default: 0
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
  /identity/auth/login/oauth2:
    post:
      summary: Login status
      operationId: loginByExternalProvider
      description: Info for a specific pet
      tags:
        - Auth
      parameters:
        - $ref: "#/components/parameters/AppId"
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginSocialParameters"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  successful:
                    type: boolean
                    default: false
                  result:
                    $ref: "#/components/schemas/Credentials"
                    nullable: true
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  errorMessage:
                    type: string
                    default: ""
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  /identity/authenticated/auth/logout:
    post:
      summary: Log out service
      operationId: logout
      description: Handle logging out an account
      tags:
        - Auth
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      responses:
        "200":
          $ref: "#/components/responses/Error"
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  /identity/auth/register:
    post:
      summary: Register
      operationId: registerByEmailOrPhone
      description: Register
      tags:
        - Auth
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterParameters"
      responses:
        default:
          $ref: "#/components/responses/ResponseDefault"
  /identity/account/verify:
    post:
      operationId: verifyOTP
      description: Register
      tags:
        - Auth
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyOtpParameters"
      responses:
        "200":
          description: Response Default
          content:
            application/json:
              schema:
                type: object
                description: Error
                properties:
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                    nullable: true
                  errorMessage:
                    type: string
                    nullable: true
                    default: ""
                  result:
                    $ref: "#/components/schemas/Credentials"
  /identity/account/password/forgot:
    post:
      operationId: forgotPassword
      summary: Forgot Password
      description: Forgot Password
      tags:
        - Auth
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ForgotPasswordParameters"
      responses:
        "200":
          description: Forgot Password success
        default:
          $ref: "#/components/responses/ResponseDefault"
  /identity/account/password/check-recovery-code:
    post:
      operationId: verifyforgotPassword
      summary: Verify Forgot Password
      description: Verify Forgot Password
      tags:
        - Auth
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyForgotPasswordParameters"
      responses:
        "200":
          description: Verify Forgot Password success
          content:
            application/json:
              schema:
                type: object
                properties:
                  successful:
                    type: boolean
                    default: false
                  result:
                    $ref: "#/components/schemas/VerifyOtpForgotPasswordResponseModel"
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  errorMessage:
                    type: string
                    default: ""
        default:
          $ref: "#/components/responses/ResponseDefault"
  /identity/account/password/set-new-password:
    post:
      operationId: changePassword
      summary: Change Password
      description: Change Password
      tags:
        - Auth
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordParameters"
      responses:
        "200":
          description: Change Password success
        default:
          $ref: "#/components/responses/ResponseDefault"
  /identity/account/resend-verify-code:
    post:
      operationId: resentOTP
      summary: Resent OTP
      description: Resent OTP
      tags:
        - Auth
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResentOtpParameters"
      responses:
        "200":
          description: Get video success
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  /identity/auth/refresh-token:
    post:
      operationId: refreshToken
      description: refresh token after a priod
      tags:
        - Auth
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshTokenParameters"
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefreshTokenResponse"
  /users/users/profile/me:
    get:
      operationId: userInfo
      summary: Get User Info
      description: Get User Info
      tags:
        - Auth
      parameters:
        - $ref: "#/components/parameters/AppId"
        - name: deviceId
          in: query
          required: true
          schema:
            type: string
          example: deviceId
          default: ""
        - name: deviceType
          in: query
          required: true
          schema:
            type: string
          example: deviceType
          default: ""
      responses:
        "200":
          description: Get User Info
          content:
            application/json:
              schema:
                type: object
                properties:
                  successful:
                    type: boolean
                    default: false
                  result:
                    $ref: "#/components/schemas/User"
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  errorMessage:
                    type: string
                    default: ""
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/Error"
  /identity/authenticated/auth/change-password:
    post:
      operationId: profileChangePassword
      summary: Profile change password
      description: Profile change password
      tags:
        - Auth
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PasswordParameters"
      responses:
        "200":
          description: Profile change password success
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/Error"
  /users/users/profile:
    post:
      operationId: updateProfile
      description: Update Profile
      tags:
        - Auth
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateProfileParameters"
            encoding:
              avatarImage:
                contentType: "image/png, image/jpeg"
                headers:
                  X-Rate-Limit-Limit:
                    description: The number of allowed requests in the current period
                    schema:
                      type: integer
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProfileResponse"
  /users/users/settings:
    post:
      operationId: updatePNSetting
      description: Update Push Notification
      tags:
        - Auth
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePNSettingsParameters"
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePNSettingsResponse"
  /video/video/home-screen:
    get:
      operationId: getHomeData
      summary: Get data for Home Screen
      description: Get all playlist for home screen
      tags:
        - Video
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlaylistModel"
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  "/video/video/{playlistId}/{videoId}/{videoOrderingCriteria}":
    get:
      operationId: getVideoDetail
      summary: Video details
      description: Get video details
      tags:
        - Video
      parameters:
        - $ref: "#/components/parameters/AppId"
        - name: playlistId
          in: path
          required: true
          schema:
            type: string
          example: 2zx_s
        - name: videoId
          in: path
          required: true
          schema:
            type: string
          example: 2zx_s
        - name: videoOrderingCriteria
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/OrderCriteria"
          example: 1
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get video success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VideoModel"
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  "/video/emotion/{videoId}":
    post:
      operationId: emotion
      summary: Emotion
      description: Emotion
      tags:
        - Video
      parameters:
        - $ref: "#/components/parameters/AppId"
        - name: videoId
          in: path
          required: true
          schema:
            type: string
          example: 2zx_s
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: boolean
              default: false
      responses:
        "200":
          description: Emotion success
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  /video/channel/landing/200/1:
    get:
      operationId: getChannel
      summary: Get Channel
      description: Get Channel
      tags:
        - Video
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get channel landing success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChannelResponse"
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  "/video/channel/landing/{channelId}/200/1":
    get:
      operationId: getChannelPlayListDetails
      summary: Get Channel Playlist Details
      description: Get Channel Playlist Details
      tags:
        - Video
      parameters:
        - $ref: "#/components/parameters/AppId"
        - name: channelId
          in: path
          required: true
          schema:
            type: string
          example: 2zx_s
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get channel playlist success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlaylistResponse"
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  "/video/playlists/{playlistId}?sortBy={videoOrderingCriteria}":
    get:
      operationId: getPlayListVideo
      summary: Get play list video
      description: Get play list video
      tags:
        - Video
      parameters:
        - $ref: "#/components/parameters/AppId"
        - name: playlistId
          in: path
          required: true
          schema:
            type: string
          example: 23ac
        - name: videoOrderingCriteria
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/OrderCriteria"
          example: 1
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get play list video success
          content:
            application/json:
              schema:
                type: object
                properties:
                  successful:
                    type: boolean
                    default: false
                  result:
                    type: array
                    items:
                      $ref: "#/components/schemas/VideoModel"
                    default: []
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  errorMessage:
                    type: string
                    default: ""
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  "/video/comment/{videoId}/{pageSize}/{pageNumber}":
    get:
      operationId: getVideoComment
      summary: Get Video Comment
      description: Get Video Comment
      tags:
        - Video
      parameters:
        - $ref: "#/components/parameters/AppId"
        - name: videoId
          in: path
          required: true
          schema:
            type: string
          example: 2zx_s
        - name: pageSize
          in: path
          required: true
          schema:
            type: integer
          example: 1
        - name: pageNumber
          in: path
          required: true
          schema:
            type: integer
          example: 1
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get Video Comment success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentResponse"
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  /video/comment:
    post:
      operationId: createComment
      summary: Create Comment
      description: Create Comment
      tags:
        - Video
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCommentParameters"
      responses:
        "200":
          description: Create Comment success
          content:
            application/json:
              schema:
                type: object
                properties:
                  successful:
                    type: boolean
                    default: false
                  result:
                    $ref: "#/components/schemas/CreateCommentModel"
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  errorMessage:
                    type: string
                    default: ""
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  "/video/comment/{updateId}":
    put:
      operationId: updateComment
      summary: Update Comment
      description: Update Comment
      tags:
        - Video
      parameters:
        - $ref: "#/components/parameters/AppId"
        - name: updateId
          in: path
          required: true
          schema:
            type: string
          example: 2zx_s
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCommentParameters"
      responses:
        "200":
          description: Update Comment success
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  "/video/comment/{deleteId}":
    delete:
      operationId: deleteComment
      summary: Delete Comment
      description: Delete Comment
      tags:
        - Video
      parameters:
        - $ref: "#/components/parameters/AppId"
        - name: deleteId
          in: path
          required: true
          schema:
            type: string
          example: 2zx_s
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Delete Comment success
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  /video/video/delete-video-saved:
    post:
      operationId: deleteVideoSaved
      summary: Delete video saved
      description: Delete video saved
      tags:
        - Video
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Delete video saved success
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  /video/video/list-saved/100/1:
    get:
      operationId: getSaveVideo
      summary: Get save video
      description: Get save video
      tags:
        - Video
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get save video success
          content:
            application/json:
              schema:
                type: object
                properties:
                  successful:
                    type: boolean
                    default: false
                  result:
                    $ref: "#/components/schemas/SettingLoadMoreModel"
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  errorMessage:
                    type: string
                    default: ""
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/Error"
  /video/video/unsaved:
    post:
      operationId: unSaveVideo
      summary: Remove Save video
      description: Remove Save video
      tags:
        - Video
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaveVideoParameters"
      responses:
        "200":
          description: Remove save video success
          content:
            application/json:
              schema:
                type: object
                properties:
                  successful:
                    type: boolean
                    default: false
                  result:
                    type: object
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  errorMessage:
                    type: string
                    default: ""
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  /video/video/saved:
    post:
      operationId: saveVideo
      summary: Save video
      description: Save video
      tags:
        - Video
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaveVideoParameters"
      responses:
        "200":
          description: Save video success
          content:
            application/json:
              schema:
                type: object
                properties:
                  successful:
                    type: boolean
                    default: false
                  result:
                    type: object
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  errorMessage:
                    type: string
                    default: ""
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  /video/video/histories:
    get:
      operationId: history
      summary: Get history video
      description: Get history video
      tags:
        - Video
      parameters:
        - $ref: "#/components/parameters/AppId"
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
          example: 10
        - name: pageNumber
          in: query
          required: true
          schema:
            type: integer
          example: 1
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get history video
          content:
            application/json:
              schema:
                type: object
                properties:
                  successful:
                    type: boolean
                    default: false
                  result:
                    $ref: "#/components/schemas/SettingLoadMoreModel"
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  errorMessage:
                    type: string
                    default: ""
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  /video/video/histories/clear-all:
    delete:
      operationId: deleteVideoHistory
      summary: Delete history
      description: Delete history
      tags:
        - Video
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Delete history success
          content:
            application/json:
              schema:
                type: object
                properties:
                  successful:
                    type: boolean
                    default: false
                  result:
                    type: object
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  errorMessage:
                    type: string
                    default: ""
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  "/video/video/mobile/{pageSize}/{pageNumber}":
    get:
      operationId: search
      summary: Search data
      description: Search video
      tags:
        - Video
      parameters:
        - $ref: "#/components/parameters/AppId"
        - name: pageSize
          in: path
          required: true
          schema:
            type: integer
          example: 20
        - name: pageNumber
          in: path
          required: true
          schema:
            type: integer
          example: 1
        - name: search
          in: query
          required: true
          schema:
            type: string
          example: Cô Gái
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get video success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      from:
                        type: integer
                        example: 1
                      index:
                        type: integer
                        example: 1
                      size:
                        type: integer
                        default: 10
                        example: 20
                      count:
                        type: integer
                        example: 668
                      pages:
                        type: integer
                        example: 34
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/VideoModel"
                      hasPrevious:
                        type: boolean
                        default: false
                        example: false
                      hasNext:
                        type: boolean
                        default: false
                        example: false
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
  "/video/video/mobile/suggestion/{pageSize}":
    get:
      operationId: searchVideoAutoCompleted
      summary: Search video auto completed data
      description: Search video auto completed data
      tags:
        - Video
      parameters:
        - $ref: "#/components/parameters/AppId"
        - name: pageSize
          in: path
          required: true
          schema:
            type: integer
          example: 20
        - name: search
          in: query
          required: true
          schema:
            type: string
          example: Cô Gái
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Search video auto completed data success
          content:
            application/json:
              schema:
                type: object
                properties:
                  successful:
                    type: boolean
                    default: false
                  result:
                    type: array
                    items:
                      type: string
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  errorMessage:
                    type: string
                    default: ""
        default:
          $ref: "#/components/responses/ResponseDefault"
  "/video/contents/{screenCover}":
    get:
      operationId: getScreenCover
      description: Get screen cover
      tags:
        - Video
      parameters:
        - $ref: "#/components/parameters/AppId"
        - name: screenCover
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/ScreenCover"
      security:
        - bearerAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  successful:
                    type: boolean
                    default: false
                  result:
                    $ref: "#/components/schemas/CoverModel"
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  errorMessage:
                    $ref: "#/components/schemas/ErrorMessage"
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
  /payment/transactions/me:
    get:
      operationId: historyPayment
      summary: Get history payment
      description: Get history payment
      tags:
        - Payment
      parameters:
        - $ref: "#/components/parameters/AppId"
        - name: page
          in: query
          required: true
          schema:
            type: integer
          example: 1
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
          example: 10
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get history payment success
          content:
            application/json:
              schema:
                type: object
                properties:
                  successful:
                    type: boolean
                    default: false
                  result:
                    $ref: "#/components/schemas/HistoryPaymentModel"
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  errorMessage:
                    type: string
                    default: ""
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/Error"
  /payment/tickets:
    post:
      operationId: payment
      summary: Payment
      description: Payment
      tags:
        - Payment
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentParameters"
      responses:
        "200":
          description: Payment success
          content:
            application/json:
              schema:
                type: object
                properties:
                  successful:
                    type: boolean
                    default: false
                  result:
                    $ref: "#/components/schemas/PaymentResponses"
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  errorMessage:
                    type: string
                    default: ""
        default:
          $ref: "#/components/responses/Error"
  /payment/currencies/convert:
    get:
      operationId: conversionRate
      summary: Conversion rate
      description: Conversion rate
      tags:
        - Payment
      parameters:
        - $ref: "#/components/parameters/AppId"
        - name: amount
          in: query
          required: true
          schema:
            type: integer
          example: 0
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Conversion rate success
          content:
            application/json:
              schema:
                type: object
                properties:
                  successful:
                    type: boolean
                    default: false
                  result:
                    $ref: "#/components/schemas/ConvertionRateResponse"
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  errorMessage:
                    type: string
                    default: ""
        default:
          $ref: "#/components/responses/Error"
  /payment/tokens/braintree:
    get:
      operationId: getClientToken
      summary: Get Client Token
      description: Get Client Token
      tags:
        - Payment
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get Client Token success
          content:
            application/json:
              schema:
                type: object
                properties:
                  successful:
                    type: boolean
                    default: false
                  result:
                    $ref: "#/components/schemas/ClientToken"
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  errorMessage:
                    type: string
                    default: ""
        default:
          $ref: "#/components/responses/Error"
  /live-stream/schedules:
    get:
      operationId: getLiveStreamSchedules
      description: Get live stream schedules for home and channels
      tags:
        - LiveStream
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get livestream schedules successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VideoModel"
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
  "/live-stream/schedules/{liveStreamId}":
    get:
      operationId: livestream
      description: Get live stream details
      tags:
        - LiveStream
      parameters:
        - $ref: "#/components/parameters/AppId"
        - name: liveStreamId
          in: path
          required: true
          schema:
            type: string
          example: asd2s
        - name: ticketCode
          in: query
          schema:
            type: string
          example: asd23
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get livestream schedules successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiveStreamModel"
  /interaction/views:
    post:
      operationId: joinLiveStream
      description: Join live stream
      tags:
        - LiveStream
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/JoinLiveStreamParameters"
      responses:
        "200":
          description: Join live stream successful
  /interaction/emoticons:
    post:
      operationId: postEmoticons
      description: Post emoticons
      tags:
        - LiveStream
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/PostEmotion"
      responses:
        "200":
          description: Post emoticons successful
  /interaction/comments:
    post:
      operationId: commentLiveStream
      description: Comment Live Stream
      tags:
        - LiveStream
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CreateCommentLiveStreamParameters"
      responses:
        "200":
          description: Comment Live Stream successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  successful:
                    type: boolean
                    default: false
                  result:
                    type: array
                    items:
                      $ref: "#/components/schemas/CommentLiveStreamResponse"
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  errorMessage:
                    type: string
                    default: ""
  /notification/notification/register-device:
    post:
      operationId: registerDevice
      description: "Register device with Cloud message, APNs or FCM"
      tags:
        - Notification
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterDeviceParameters"
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterDeviceResponse"
  /ads/advertisements/active:
    get:
      operationId: getAds
      description: "Get Abs for home, channels and search"
      tags:
        - Advertisement
      parameters:
        - $ref: "#/components/parameters/AppId"
        - name: orderBy
          in: query
          schema:
            type: string
          example: zone
          default: zone
        - name: orderType
          in: query
          schema:
            type: string
          example: ascend
          default: ascend
        - name: place
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/AdsScreen"
          default: HOME
        - name: platform
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/DevicePlatform"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get User Info
          content:
            application/json:
              schema:
                type: object
                properties:
                  successful:
                    type: boolean
                    default: false
                  result:
                    type: array
                    items:
                      $ref: "#/components/schemas/AdsModel"
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  errorMessage:
                    $ref: "#/components/schemas/ErrorMessage"
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
  /survey/programs/active:
    get:
      operationId: getProgram
      summary: Get Program
      description: Get Program
      tags:
        - Survey
      parameters:
        - $ref: "#/components/parameters/AppId"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get Program success
          content:
            application/json:
              schema:
                type: object
                properties:
                  successful:
                    type: boolean
                    default: false
                  result:
                    type: array
                    items:
                      $ref: "#/components/schemas/SurveyModel"
                    default: []
                  errorCode:
                    $ref: "#/components/schemas/ErrorCode"
                  errorMessage:
                    type: string
                    default: ""
        "201":
          $ref: "#/components/responses/UnauthorizedError"
        "400":
          $ref: "#/components/responses/UnauthorizedError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
        "503":
          $ref: "#/components/responses/UnexpectedError"
        default:
          $ref: "#/components/responses/ResponseDefault"
components:
  schemas:
    AuthenError-ref:
      $ref: "#/components/schemas/AuthenError"
    AdSource-ref:
      $ref: "#/components/schemas/AdSource"
    AdsScreen-ref:
      $ref: "#/components/schemas/AdsScreen"
    AppsFlyerEvent-ref:
      $ref: "#/components/schemas/AppsFlyerEvent"
    AppsFlyerEventParameters-ref:
      $ref: "#/components/schemas/AppsFlyerEventParameters"
    AppUpdateStatus-ref:
      $ref: "#/components/schemas/AppUpdateStatus"
    ChannelModel-ref:
      $ref: "#/components/schemas/ChannelModel"
    ChannelRenderType-ref:
      $ref: "#/components/schemas/ChannelRenderType"
    CommentModel-ref:
      $ref: "#/components/schemas/CommentModel"
    CoverModel-ref:
      $ref: "#/components/schemas/CoverModel"
    DeepLink-ref:
      $ref: "#/components/schemas/DeepLink"
    DeepLinkResult-ref:
      $ref: "#/components/schemas/DeepLinkResult"
    DeepLinkResultPayloadDeeplink-ref:
      $ref: "#/components/schemas/DeepLinkResultPayloadDeeplink"
    DeepLinkStatus-ref:
      $ref: "#/components/schemas/DeepLinkStatus"
    EmailCredentials-ref:
      $ref: "#/components/schemas/EmailCredentials"
    EmptyErrorResponse-ref:
      $ref: "#/components/schemas/EmptyErrorResponse"
    ErrorCode-ref:
      $ref: "#/components/schemas/ErrorCode"
    ErrorResponse-ref:
      $ref: "#/components/schemas/ErrorResponse"
    ExpandingState-ref:
      $ref: "#/components/schemas/ExpandingState"
    ExternalProvider-ref:
      $ref: "#/components/schemas/ExternalProvider"
    FBSRemoteConfigs-ref:
      $ref: "#/components/schemas/FBSRemoteConfigs"
    FSLabel-ref:
      $ref: "#/components/schemas/FSLabel"
    HomeContent-ref:
      $ref: "#/components/schemas/HomeContent"
    Keys-ref:
      $ref: "#/components/schemas/Keys"
    LiveStreamStatus-ref:
      $ref: "#/components/schemas/LiveStreamStatus"
    LiveStreamState-ref:
      $ref: "#/components/schemas/LiveStreamState"
    LiveStreamBanner-ref:
      $ref: "#/components/schemas/LiveStreamBanner"
    LoadingState-ref:
      $ref: "#/components/schemas/LoadingState"
    MobileCredentials-ref:
      $ref: "#/components/schemas/MobileCredentials"
    MomoPaymentParam-ref:
      $ref: "#/components/schemas/MomoPaymentParam"
    NotificationName-ref:
      $ref: "#/components/schemas/NotificationName"
    NetworkStateResult-ref:
      $ref: "#/components/schemas/NetworkStateResult"
    OrderCriteria-ref:
      $ref: "#/components/schemas/OrderCriteria"
    PaymentModel-ref:
      $ref: "#/components/schemas/PaymentModel"
    PlatformParameter-ref:
      $ref: "#/components/schemas/PlatformParameter"
    PlaylistModel-ref:
      $ref: "#/components/schemas/PlaylistModel"
    PlaylistRenderType-ref:
      $ref: "#/components/schemas/PlaylistRenderType"
    ProviderType-ref:
      $ref: "#/components/schemas/ProviderType"
    StatusCode-ref:
      $ref: "#/components/schemas/StatusCode"
    TransactionModel-ref:
      $ref: "#/components/schemas/TransactionModel"
    ThumbnailVariant-ref:
      $ref: "#/components/schemas/ThumbnailVariant"
    User-ref:
      $ref: "#/components/schemas/User"
    UserState-ref:
      $ref: "#/components/schemas/UserState"
    VideoModal-ref:
      $ref: "#/components/schemas/VideoModel"
    VideoParamsModel-ref:
      $ref: "#/components/schemas/VideoParamsModel"
    ChannelListDetails-ref:
      $ref: "#/components/schemas/ChannelListDetails"
    PaymentError-ref:
      $ref: "#/components/schemas/PaymentError"
    PaypalParameter-ref:
      $ref: "#/components/schemas/PaypalParameter"
    MoMoParameters-ref:
      $ref: "#/components/schemas/MoMoParameters"
    CommentState-ref:
      $ref: "#/components/schemas/CommentState"
    GetLiveStreamStatus-ref:
      $ref: "#/components/schemas/GetLiveStreamStatus"
    CommentLiveStreamModel-ref:
      $ref: "#/components/schemas/CommentLiveStreamModel"
    LiveStreamFireStoreParameters-ref:
      $ref: "#/components/schemas/LiveStreamFireStoreParameters"
    PostEmotion-ref:
      $ref: "#/components/schemas/PostEmotion"
    AuthParameters:
      type: object
      description: data
      properties:
        password:
          type: string
        client_secret:
          type: string
        scope:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
      required:
        - password
        - client_secret
        - scope
    ClientId:
      type: string
      default: mobile
      example: mobile
    LoginParameters:
      allOf:
        - $ref: "#/components/schemas/AuthParameters"
        - type: object
          description: data
          properties:
            client_id:
              $ref: "#/components/schemas/ClientId"
              description: used in login account
          required:
            - client_id
    ErrorCode:
      type: integer
      description: ErrorCode
      enum:
        - -999
        - -2
        - 1018
        - 1011
        - 1008
        - 1007
        - 1024
        - 1025
        - 40001
        - 1015
        - 1016
        - 1001
        - 1002
        - 1003
        - 1004
        - 1010
        - 1012
        - 1021
        - 1022
        - 8000
        - 8001
        - -998
        - -997
        - 3001
        - 88888
      x-enum-varnames:
        - SystemError
        - NetworkUnavailable
        - UserAlreadyExists
        - PhoneNumberNotVerified
        - LoginUserNotFound
        - EmailOrPhoneNumberIsRequired
        - UserSuspended
        - UserLoggedInOnAnotherDevice
        - RegisterExistAccount
        - WrongOTP
        - ExpiredOTP
        - RegisterDuplicateUserName
        - RegisterRequiredEmailOrPhone
        - RegisterRequiredLastName
        - RegisterRequiredFirstName
        - EmailNotVerified
        - UserIsBlocked
        - PasswordNotCorrect
        - NewPasswordSameOldPassword
        - UserPurchasedThisTicket
        - LiveStreamHasEnded
        - PaypalError
        - AdsError
        - Cancel
        - noError
    ClientSecret:
      type: string
      example: 5fv3v4v34vv4r3v4
    Scope:
      type: string
      default: openid offline_access
      example: openid offline_access
    GrantType:
      type: string
      default: password
      example: password
    DeviceId:
      name: deviceId
      type: string
      format: uuid
    DeviceType:
      name: deviceType
      type: string
      description: DeviceType
      enum:
        - IPHONE
        - ANDROID
        - TABLET
        - WEB
        - TV
    LoginEncodedParameters:
      type: object
      properties:
        username:
          type: string
          example:
            - "newapp-${email}"
            - "newapp-${phoneNumber}"
        password:
          type: string
        client_id:
          $ref: "#/components/schemas/ClientId"
        client_secret:
          $ref: "#/components/schemas/ClientSecret"
        scope:
          $ref: "#/components/schemas/Scope"
        grant_type:
          $ref: "#/components/schemas/GrantType"
        device_id:
          $ref: "#/components/schemas/DeviceId"
        device_type:
          $ref: "#/components/schemas/DeviceType"
      required:
        - username
        - password
        - client_id
        - client_secret
        - scope
        - grant_type
        - device_id
        - device_type
      example: >-
        \(username=...)&password=\(password)&\(Keys.client_id)=\(Env.clientId)&\(Keys.client_secret)=\(Env.clientSecret)&\(Keys.scope)=\(Env.scopes)&\(Keys.grantType)=password&device_id=\(Utils.getDeviceUUID())&device_type=\(Utils.getDeviceType())"
    LoginSocialParameters:
      type: object
      description: data
      properties:
        GrantType:
          type: string
          default: external
          example: external
        client_id:
          $ref: "#/components/schemas/ClientId"
        client_secret:
          $ref: "#/components/schemas/ClientSecret"
        scope:
          $ref: "#/components/schemas/Scope"
        ExternalToken:
          type: string
          description: token from social sign-in service
        Provider:
          type: string
        device_id:
          $ref: "#/components/schemas/DeviceId"
        device_type:
          $ref: "#/components/schemas/DeviceType"
      required:
        - GrantType
        - client_id
        - client_secret
        - scope
        - ExternalToken
        - Provider
        - device_id
        - device_type
    Credentials:
      type: object
      description: Credentials
      properties:
        access_token:
          type: string
          default: ""
        refresh_token:
          type: string
          default: ""
        expires_in:
          type: integer
          default: 0
        lastAccessDate:
          type: string
          format: date-time
          default: now
        token_type:
          type: string
          default: ""
          example: Bearer
        scope:
          type: string
          default: ""
          example: offline_access openid
        unblockAt:
          type: string
          format: date-time
    RegisterParameters:
      allOf:
        - $ref: "#/components/schemas/AuthParameters"
        - type: object
          description: data
          properties:
            clientId:
              $ref: "#/components/schemas/ClientId"
              description: used in register account
          required:
            - clientId
    VerifyCode:
      type: string
    VerifyOtpParameters:
      type: object
      description: data
      properties:
        phoneNumber:
          type: string
        email:
          type: string
        client_id:
          $ref: "#/components/schemas/ClientId"
        client_secret:
          $ref: "#/components/schemas/ClientSecret"
        scope:
          $ref: "#/components/schemas/Scope"
        device_id:
          $ref: "#/components/schemas/DeviceId"
        device_type:
          $ref: "#/components/schemas/DeviceType"
        verifyCode:
          $ref: "#/components/schemas/VerifyCode"
        password:
          type: string
      required:
        - password
        - client_id
        - client_secret
        - scope
    ForgotPasswordParameters:
      type: object
      properties:
        client_id:
          $ref: "#/components/schemas/ClientId"
        phoneNumber:
          type: string
        email:
          type: string
    VerifyForgotPasswordParameters:
      type: object
      properties:
        verifyCode:
          type: string
        username:
          type: string
    VerifyOtpForgotPasswordResponseModel:
      type: object
      description: VerifyOtpForgotPasswordResponseModel
      properties:
        recoveryToken:
          type: string
    ChangePasswordParameters:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
        client_id:
          $ref: "#/components/schemas/ClientId"
        client_secret:
          $ref: "#/components/schemas/ClientSecret"
        scope:
          $ref: "#/components/schemas/Scope"
        token:
          type: string
    ResentOtpParameters:
      type: object
      properties:
        phoneNumber:
          type: string
        email:
          type: string
    RefreshToken:
      type: string
      format: uuid
      default: ""
    RefreshTokenParameters:
      type: object
      description: RefreshTokenParameters
      properties:
        client_id:
          $ref: "#/components/schemas/ClientId"
        client_secret:
          $ref: "#/components/schemas/ClientSecret"
        scope:
          $ref: "#/components/schemas/Scope"
        refresh_token:
          $ref: "#/components/schemas/RefreshToken"
      required:
        - client_id
        - client_secret
        - scope
        - refresh_token
    ErrorMessage:
      name: errorMessage
      type: string
      default: ""
    Successful:
      name: successful
      type: boolean
      default: false
    RefreshTokenResponse:
      description: RefreshTokenResponse
      type: object
      properties:
        errorCode:
          $ref: "#/components/schemas/ErrorCode"
          nullable: true
        errorMessage:
          $ref: "#/components/schemas/ErrorMessage"
        successful:
          $ref: "#/components/schemas/Successful"
        result:
          $ref: "#/components/schemas/Credentials"
    PhoneNumber:
      type: string
      default: ""
    Email:
      type: string
      default: ""
    UserName:
      name: userName
      type: string
      default: ""
    FirstName:
      name: firstName
      type: string
      default: ""
    LastName:
      name: lastName
      type: string
      default: ""
    IsReceiveNotification:
      type: boolean
      default: false
    ProviderType:
      type: string
      description: ProviderType
      enum:
        - facebook
        - google
        - apple
        - manual
    User:
      type: object
      description: User model data
      properties:
        phoneNumber:
          $ref: "#/components/schemas/PhoneNumber"
        email:
          $ref: "#/components/schemas/Email"
        userName:
          $ref: "#/components/schemas/UserName"
        username:
          $ref: "#/components/schemas/UserName"
        password:
          type: string
        fullName:
          type: string
        displayName:
          type: string
        firstName:
          $ref: "#/components/schemas/FirstName"
        lastName:
          $ref: "#/components/schemas/LastName"
        avatarUrl:
          type: string
        avatar:
          type: string
        userId:
          type: string
        isReceiveNotification:
          $ref: "#/components/schemas/IsReceiveNotification"
        status:
          type: string
          default: ""
          example: SUSPENDED
        registerTime:
          type: string
          format: date-time
        providerType:
          $ref: "#/components/schemas/ProviderType"
    PasswordParameters:
      type: object
      properties:
        oldPassword:
          type: string
          default: ""
        newPassword:
          type: string
          default: ""
      required:
        - oldPassword
        - newPassword
    UpdateProfileParameters:
      type: object
      description: UpdateProfileParameters
      properties:
        firstName:
          $ref: "#/components/schemas/FirstName"
        lastName:
          $ref: "#/components/schemas/LastName"
        userName:
          $ref: "#/components/schemas/UserName"
        avatarImage:
          type: MultipartFile
      required:
        - firstName
        - lastName
    UpdateProfileResponse:
      type: object
      description: UpdateProfileResponse
      properties:
        errorCode:
          $ref: "#/components/schemas/ErrorCode"
          nullable: true
        errorMessage:
          $ref: "#/components/schemas/ErrorMessage"
        result:
          $ref: "#/components/schemas/User"
        successful:
          $ref: "#/components/schemas/Successful"
    UpdatePNSettingsParameters:
      type: object
      description: UpdatePNSettingsParameters
      properties:
        isReceiveNotification:
          $ref: "#/components/schemas/IsReceiveNotification"
      required:
        - isReceiveNotification
    UpdatePNSettingsResponse:
      type: object
      description: UpdatePNSettingsResponse
      properties:
        errorCode:
          $ref: "#/components/schemas/ErrorCode"
          nullable: true
        errorMessage:
          $ref: "#/components/schemas/ErrorMessage"
          default: ""
        result:
          type: object
          properties:
            userId:
              type: string
              format: uuid
            isReceiveNotification:
              $ref: "#/components/schemas/IsReceiveNotification"
    ContentType:
      type: integer
      description: ContentType
      enum:
        - 0
        - 1
      default: 0
      x-enum-varnames:
        - Playlist
        - Channel
    PlaylistRenderType:
      type: integer
      description: PlaylistRenderType
      enum:
        - 0
        - 1
        - 2
        - 3
      default: 0
      x-enum-varnames:
        - Banner
        - FullCard
        - HalfCard
        - LiveStream
    LiveStreamStatus:
      type: integer
      description: LiveStreamStatus
      enum:
        - 1
        - 2
        - 3
        - 4
      x-enum-varnames:
        - Live
        - Upcoming
        - Unpublish
        - Completed
      default: 2
    VideoModel:
      type: object
      description: VideoModel
      properties:
        videoId:
          type: string
        id:
          type: string
        dM_Id:
          type: string
        title:
          type: string
        thumbnail:
          type: string
          description: used for liveStream banner
        thumbnails:
          type: object
          additionalProperties:
            type: string
        thumbnailSeleted:
          type: string
          default: ""
        trailerUrl:
          type: string
        liveStreamUrl:
          type: string
        status:
          $ref: "#/components/schemas/LiveStreamStatus"
        linkShare:
          type: string
          default: ""
        secretKey:
          type: string
        url:
          type: string
        category:
          type: string
        duration:
          type: integer
          default: 0
        playlistId:
          type: string
          default: "0"
        playlistName:
          type: string
        createdAt:
          type: string
          format: date-time
        createdTime:
          type: string
          format: date-time
        lastAccessedAt:
          type: string
          format: date-time
        totalViews:
          type: integer
          default: 0
        relatedVideos:
          type: array
          items:
            $ref: "#/components/schemas/VideoModel"
        totalEmotions:
          type: integer
          default: 0
        totalComments:
          type: integer
          default: 0
        videoOrderingCriteria:
          default: 3
          $ref: "#/components/schemas/OrderCriteria"
        isDropHeart:
          type: boolean
          default: false
          example: false
        isDisabledComment:
          type: boolean
          default: false
        isLoved:
          type: boolean
          default: false
        isSaved:
          type: boolean
          default: false
        comments:
          type: array
          items:
            $ref: "#/components/schemas/CommentModel"
          default: []
        numberOfComments:
          type: integer
          default: 0
        otherVideos:
          type: array
          items:
            $ref: "#/components/schemas/VideoModel"
          default: []
        channelName:
          type: string
    OrderCriteria:
      type: integer
      description: OrderCriteria
      default: 3
      enum:
        - 0
        - 1
        - 2
        - 3
      x-enum-varnames:
        - Default
        - Views
        - UploadDate
        - Manually
    CommentModel:
      type: object
      description: CommentModel
      properties:
        id:
          type: string
          format: uuid
          default: 1
        videoId:
          type: string
        userId:
          type: string
        userName:
          $ref: "#/components/schemas/UserName"
          default: ""
        firstName:
          $ref: "#/components/schemas/FirstName"
        lastName:
          $ref: "#/components/schemas/LastName"
        email:
          $ref: "#/components/schemas/Email"
          default: ""
        phoneNumber:
          $ref: "#/components/schemas/PhoneNumber"
          default: ""
        commentContent:
          type: string
          default: ""
        avatarUrl:
          type: string
          default: ""
        createdAt:
          type: string
          format: date-time
        updateAt:
          type: string
          format: date-time
        fullName:
          type: string
          default: ""
        isHidden:
          type: boolean
          default: false
        editable:
          type: boolean
          default: false
        isExpanding:
          type: boolean
          default: false
    PlaylistModel:
      type: object
      description: PlaylistModel
      properties:
        id:
          type: string
          default: ""
        channelName:
          type: string
          default: ""
        channelDescription:
          type: string
          default: ""
        playlistId:
          type: string
          default: ""
        channelId:
          type: string
          default: ""
        contentType:
          $ref: "#/components/schemas/ContentType"
        viewingType:
          $ref: "#/components/schemas/PlaylistRenderType"
        displayName:
          type: string
          default: ""
        videos:
          type: array
          items:
            $ref: "#/components/schemas/VideoModel"
          default: []
        videoOrderingCriteria:
          $ref: "#/components/schemas/OrderCriteria"
        numberOfVideos:
          type: integer
          default: 0
        thumbnailUrl:
          type: string
          default: ""
        createAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        numberOfEpisodes:
          type: integer
          default: 0
        playlistName:
          type: string
        thumbnails:
          type: object
          additionalProperties:
            type: string
    ChannelModel:
      type: object
      description: ChannelModel
      properties:
        id:
          type: string
          default: ""
        channelName:
          type: string
          default: ""
        channelDescription:
          type: string
          default: ""
        channelCovers:
          type: object
          properties:
            cover_100:
              type: string
            cover_150:
              type: string
            cover_200:
              type: string
            cover_250:
              type: string
            cover_Url:
              type: string
            image:
              type: string
            link:
              type: string
          default: {}
    ChannelResponse:
      type: object
      description: ChannelResponseModel
      properties:
        from:
          type: integer
        index:
          type: integer
        size:
          type: integer
        count:
          type: integer
        pages:
          type: integer
        items:
          type: array
          items:
            $ref: "#/components/schemas/ChannelModel"
          default: []
        hasPrevious:
          type: boolean
          default: false
        hasNext:
          type: boolean
          default: false
    PlaylistResponse:
      type: object
      description: PlaylistResponseModel
      properties:
        from:
          type: integer
        index:
          type: integer
        size:
          type: integer
        count:
          type: integer
        pages:
          type: integer
        items:
          type: array
          items:
            $ref: "#/components/schemas/PlaylistModel"
          default: []
        hasPrevious:
          type: boolean
          default: false
        hasNext:
          type: boolean
          default: false
    CommentResponse:
      type: object
      description: ChannelResponseModel
      properties:
        isDisabledComment:
          type: boolean
          default: false
        from:
          type: integer
        index:
          type: integer
        size:
          type: integer
        count:
          type: integer
        pages:
          type: integer
        items:
          type: array
          items:
            $ref: "#/components/schemas/CommentModel"
          default: []
        hasPrevious:
          type: boolean
          default: false
        hasNext:
          type: boolean
          default: false
    UserCommentParameters:
      type: object
      properties:
        id:
          type: string
          default: ""
        username:
          $ref: "#/components/schemas/UserName"
          default: ""
        firstName:
          $ref: "#/components/schemas/FirstName"
        lastName:
          $ref: "#/components/schemas/LastName"
        avatarUrl:
          type: string
          default: ""
        displayName:
          type: string
          default: ""
        email:
          $ref: "#/components/schemas/Email"
          default: ""
        phoneNumber:
          $ref: "#/components/schemas/PhoneNumber"
          default: ""
      required:
        - id
        - username
        - firstName
        - lastName
        - avatarUrl
        - displayName
        - email
        - phoneNumber
    CreateCommentParameters:
      type: object
      properties:
        id:
          type: string
          default: ""
        videoId:
          type: string
          default: ""
        commentContent:
          type: string
          default: ""
        user:
          $ref: "#/components/schemas/UserCommentParameters"
      required:
        - id
        - videoId
        - commentContent
        - user
    CreateCommentModel:
      type: object
      description: CreateCommentModel
      properties:
        id:
          type: string
          default: ""
        videoId:
          type: string
          default: ""
        userId:
          type: string
          default: ""
        commentContent:
          type: string
          default: ""
        editable:
          type: boolean
          default: false
        createdAt:
          type: string
          format: date-time
    UpdateCommentParameters:
      type: object
      properties:
        videoId:
          type: string
          default: ""
        commentContent:
          type: string
          default: ""
        user:
          $ref: "#/components/schemas/UserCommentParameters"
      required:
        - id
        - videoId
        - commentContent
        - user
    SettingVideoModel:
      type: object
      description: SettingVideoModel
      properties:
        id:
          type: string
          default: ""
        title:
          type: string
          default: ""
        totalView:
          type: integer
          default: 0
        playlistId:
          type: string
          default: ""
        createdAt:
          type: string
          format: date-time
        lastAccessedAt:
          type: string
          format: date-time
        thumbnails:
          type: object
          additionalProperties:
            type: string
        group:
          type: string
          default: ""
    SettingLoadMoreModel:
      type: object
      description: SettingLoadMoreModel
      properties:
        from:
          type: integer
        index:
          type: integer
        size:
          type: integer
        count:
          type: integer
        pages:
          type: integer
        items:
          type: array
          items:
            $ref: "#/components/schemas/SettingVideoModel"
          default: []
        hasPrevious:
          type: boolean
          default: false
        hasNext:
          type: boolean
          default: false
    SaveVideoParameters:
      type: object
      properties:
        videoId:
          type: string
          default: ""
      required:
        - videoId
    ScreenCover:
      type: string
      enum:
        - gethomebanner
        - getchannelbanner
    CoverModel:
      type: object
      description: CoverModel
      properties:
        title:
          type: string
          default: ""
        des:
          type: string
          default: ""
        image:
          type: string
          default: ""
        link:
          type: string
          default: ""
        validLink:
          type: boolean
          default: false
          description: computed field in run-time
    HistoryPaymentItemModel:
      type: object
      description: HistoryPaymentItemModel
      properties:
        id:
          type: string
          default: ""
        liveStreamId:
          type: string
          default: ""
        liveStreamTitle:
          type: string
          default: ""
        liveStreamThumbnail:
          type: string
          default: ""
        ticketImg:
          type: string
          default: ""
        ticketPrice:
          type: integer
          default: 0
        paymentMethod:
          type: string
          default: ""
        liveStreamStartTime:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          default: ""
    HistoryPaymentModel:
      type: object
      description: HistoryPaymentModel
      properties:
        from:
          type: integer
        index:
          type: integer
        size:
          type: integer
        count:
          type: integer
        pages:
          type: integer
        items:
          type: array
          items:
            $ref: "#/components/schemas/HistoryPaymentItemModel"
          default: []
        hasPrevious:
          type: boolean
          default: false
        hasNext:
          type: boolean
          default: false
    PaymentParameters:
      type: object
      description: PaymentParameters
      properties:
        LiveStreamId:
          type: string
          default: ""
        Username:
          type: string
          default: ""
        paymentMethod:
          type: string
          default: ""
        amount:
          type: number
          format: double
          nullable: true
        paymentMethodNonce:
          type: string
          default: ""
        deviceData:
          type: string
          default: ""
        phoneNumber:
          type: string
          default: ""
        momoToken:
          type: string
          default: ""
      required:
        - LiveStreamId
        - Username
    PaymentResponses:
      type: object
      description: PaymentResponses
      properties:
        liveStreamId:
          type: string
          default: ""
        ticketCode:
          type: string
          default: ""
    ConvertionRateResponse:
      type: object
      description: ConvertionRateResponse
      properties:
        exchangeRateId:
          type: string
          default: ""
        currencyCode:
          type: string
          default: ""
        rates:
          type: number
          format: double
          default: 0
        amount:
          type: number
          format: double
          default: 0
        convertedValue:
          type: number
          format: double
          default: 0
        updatedTime:
          type: string
          format: date-time
    ClientToken:
      type: object
      description: ClientTokenModel
      properties:
        token:
          type: string
          default: ""
    LiveStreamModel:
      type: object
      description: LiveStreamModel
      properties:
        id:
          type: string
          default: ""
        startTime:
          type: string
          format: date-time
        title:
          type: string
          default: ""
        description:
          type: string
          default: ""
        source:
          type: string
          default: ""
        externalStreamId:
          type: string
          default: ""
        price:
          type: integer
          default: 0
        thumbnail:
          type: string
          default: ""
        liveStreamStatus:
          $ref: "#/components/schemas/LiveStreamStatus"
        livestreamUrl:
          type: string
          default: ""
        trailerUrl:
          type: string
          default: ""
        isPurchased:
          type: boolean
          default: false
        ticketCode:
          type: string
          default: ""
        ticketImg:
          type: string
          default: ""
        secretKey:
          type: string
          default: ""
        linkShare:
          type: string
          default: ""
        emoticons:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                default: ""
              iconUrl:
                type: string
                default: ""
              name:
                type: string
                default: ""
    UserJoinLiveStreamParameters:
      type: object
      description: UserJoinLiveStreamParameters
      properties:
        id:
          type: string
          default: ""
        username:
          type: string
          default: ""
        firstName:
          type: string
          default: ""
        lastName:
          type: string
          default: ""
        phoneNumber:
          type: string
          default: ""
      required:
        - id
        - username
        - firstName
        - lastName
    JoinLiveStreamParameters:
      type: object
      properties:
        liveStreamId:
          type: string
          default: ""
        liveStreamName:
          type: string
          default: ""
        liveStreamStartDate:
          type: string
          default: ""
        deviceId:
          type: string
          default: ""
        deviceName:
          type: string
          default: ""
        user:
          $ref: "#/components/schemas/UserJoinLiveStreamParameters"
        createdAt:
          type: string
      required:
        - liveStreamId
        - liveStreamName
        - liveStreamStartDate
        - deviceId
        - deviceName
        - user
    PostEmotion:
      type: object
      properties:
        liveStreamId:
          type: string
        userId:
          type: string
        emoticonId:
          type: string
        count:
          type: integer
    UserCommentLiveStreamParameters:
      type: object
      description: UserCommentLiveStreamParameters
      properties:
        id:
          type: string
          default: ""
        username:
          type: string
          default: ""
        firstName:
          type: string
          default: ""
        lastName:
          type: string
          default: ""
        avatar:
          type: string
          default: ""
      required:
        - id
        - username
        - firstName
        - lastName
        - avatar
    CreateCommentLiveStreamParameters:
      type: object
      properties:
        id:
          type: string
          default: ""
        liveStreamId:
          type: string
          default: ""
        content:
          type: string
          default: ""
        user:
          $ref: "#/components/schemas/UserCommentLiveStreamParameters"
        createdAt:
          type: string
      required:
        - id
        - liveStreamId
        - content
        - user
    CommentLiveStreamResponse:
      type: object
      description: CommentLiveStreamResponse
      properties:
        id:
          type: string
          default: ""
        content:
          type: string
          default: ""
    DeviceToken:
      name: deviceToken
      type: string
      format: uuid
    DevicePlatform:
      name: platform
      type: string
      description: DevicePlatform
      enum:
        - ios
        - android
    RegisterDeviceParameters:
      type: object
      description: RegisterDeviceParameters
      properties:
        deviceId:
          $ref: "#/components/schemas/DeviceId"
        deviceToken:
          $ref: "#/components/schemas/DeviceToken"
        platform:
          $ref: "#/components/schemas/DevicePlatform"
      required:
        - deviceId
        - deviceToken
        - platform
    RegisterDeviceResponse:
      type: object
      description: RegisterDeviceResponse
      properties:
        errorCode:
          $ref: "#/components/schemas/ErrorCode"
          nullable: true
        errorMessage:
          $ref: "#/components/schemas/ErrorMessage"
        successful:
          $ref: "#/components/schemas/Successful"
    AdsScreen:
      type: string
      description: AdsScreen
      enum:
        - HOME
        - CHANNEL
        - SEARCH
      default: HOME
    AdsModel:
      type: object
      description: AdsModel
      properties:
        id:
          type: string
          default: "1"
        zone:
          type: string
          default: ""
        place:
          $ref: "#/components/schemas/AdsScreen"
          default: HOME
        createdAt:
          type: string
          format: date-time
        isActive:
          type: boolean
          default: true
        adsUnit:
          type: string
          default: ""
          description: default for iOS
        androidAdsUnit:
          type: string
          default: ""
          description: used for android
        adsSources:
          type: string
          enum:
            - ADS_MOB
            - ADS_MANAGER
          default: ADS_MOB
        size:
          type: string
          default: 300x250
    SurveyModel:
      type: object
      description: SurveyModel
      properties:
        id:
          type: string
          default: ""
        title:
          type: string
          default: ""
        isActive:
          type: boolean
          default: false
        imageUrl:
          type: string
          default: ""
        registerUrl:
          type: string
          default: ""
        createdAt:
          type: string
          format: date-time
    ErrorDetails:
      type: object
      description: ChannelModel
      properties:
        error:
          $ref: "#/components/schemas/ErrorCode"
    AuthenError:
      allOf:
        - $ref: "#/components/schemas/ErrorDetails"
        - type: object
          properties:
            unblockAt:
              type: string
              format: date-time
    AdSource:
      type: string
      description: AdSource
      enum:
        - AD_MANAGER
        - AD_MOB
      x-enum-varnames:
        - AdManager
        - Admob
    AppsFlyerEvent:
      type: string
      description: AppsFlyerEvent
      enum:
        - af_login_email
        - af_login_email_success
        - af_login_phone
        - af_login_phone_success
        - af_login_fb
        - login_fb_success
        - af_login_gg
        - login_gg_success
        - af_login_apple
        - login_apple_success
        - af_search
        - otp_email_success
        - otp_phone_success
        - otp_resend
        - af_change_userinfo
        - af_list_view
        - af_livestream_view
        - af_first_view
        - media_minus_dailymotion
        - livestream_minus_youtube
        - af_purchase
        - completed_purchase
    AppsFlyerEventParameters:
      type: object
      description: AppsFlyerEventParameters
      properties:
        af_channel:
          type: string
        af_content_id:
          type: string
        af_content_type:
          type: string
        af_content_title:
          type: string
        af_content_duration:
          type: string
        payment_method_type:
          type: string
        af_content_keyword:
          type: string
    AppUpdateStatus:
      type: string
      description: AppUpdateStatus
      enum:
        - no_update
        - recommended_update
        - forced_update
        - skipped_update
    ChannelRenderType:
      type: integer
      description: ChannelRenderType
      enum:
        - 0
        - 1
        - 2
      default: 2
      x-enum-varnames:
        - Banner
        - LiveStream
        - Card
    DeepLinkResultPayloadDeeplinkTypeEnum:
      type: string
      enum:
        - channel
        - playlist
        - video
        - livestream
    DeepLinkResultPayloadDeeplink:
      type: object
      properties:
        campaign:
          type: string
        media_source:
          type: string
        type:
          $ref: "#/components/schemas/DeepLinkResultPayloadDeeplinkTypeEnum"
        id:
          type: string
          description: >
            value of channelId if type == "channel" value of playlistId if type
            == "playlist" value of videoId if type == "video" value of
            livestreamId if type == "livestream"
          default: ""
        deep_link_value:
          type: string
          description: deeplink's value
          default: ""
        is_deferred:
          type: boolean
          default: false
    DeepLink:
      type: object
      description: DeepLink
      properties:
        enabled:
          type: boolean
          default: false
        type:
          enum:
            - attribution
            - install
            - deeplink
            - push_notification
        time:
          type: string
          format: date-time
        data:
          $ref: "#/components/schemas/DeepLinkResultPayloadDeeplink"
    DeepLinkResultStatusEnum:
      type: string
      enum:
        - success
        - failed
    DeepLinkResultPayloadStatusEnum:
      type: string
      enum:
        - FOUND
        - NOTFOUND
      x-enum-varnames:
        - found
        - notFound
      default: NOTFOUND
    DeepLinkResultPayload:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/DeepLinkResultPayloadStatusEnum"
          default: NOTFOUND
        deepLink:
          type: string
    DeepLinkResult:
      type: object
      description: DeepLinkResult
      properties:
        status:
          $ref: "#/components/schemas/DeepLinkResultStatusEnum"
        payload:
          $ref: "#/components/schemas/DeepLinkResultPayload"
    DeepLinkStatus:
      type: object
      properties:
        enabled:
          type: boolean
          default: false
        deeplink:
          $ref: "#/components/schemas/DeepLink"
      required:
        - enabled
        - deeplink
    EmailCredentials:
      type: object
      description: Email Credentials
      properties:
        email:
          type: string
        password:
          type: string
    ErrorResponse:
      type: object
      required:
        - message
        - code
      properties:
        message:
          type: string
        code:
          type: string
          example:
            value: "API{id}"
            variables:
              id:
                type: integer
                minimum: 100
                maximum: 999
      enum:
        - ErrorAws100Response:
            example:
              - code: ERROR_AWS_100
                message: Error Aws 100
                parameters:
                  name: nelo
        - ErrorAws101Response:
            example:
              - code: ERROR_AWS_101
                message: Error Aws 101
                parameters:
                  name: nelo
    EmptyErrorResponse:
      type: object
      description: EmptyErrorResponse
      allOf:
        - $ref: "#/components/schemas/ErrorResponse"
        - type: object
          example: []
    ExpandingState:
      type: integer
      description: ExpandingState
      enum:
        - 0
        - 1
        - 2
      x-enum-varnames:
        - None
        - Collapse
        - Expand
    ExternalProvider:
      type: string
      description: ExternalProvider
      enum:
        - apple
        - facebook
        - google
    FBSRemoteConfigs:
      type: object
      description: FBSRemoteConfigs
      properties:
        isDisablePhoneLogin:
          type: boolean
        serverDown:
          type: boolean
          default: false
        iOSBuildNumberForceUpdate:
          type: integer
          default: 0
        iOSCurrentBuildNumber:
          type: integer
          default: 0
        androidBuildNumberForceUpdate:
          type: integer
          default: 0
        androidCurrentBuildNumber:
          type: integer
          default: 0
        addtionalProperty1:
          type: string
        appstoreId:
          type: string
          example: id284882215
        playstoreId:
          type: string
          example: com.facebook.katana
        privacyAndPolicyLink:
          type: string
          example: "https://www.new_project.ph/app/privacy-and-policy.html?hide-ui"
        termAndConditionsLink:
          type: string
          example: "https://www.new_project.ph/app/terms-and-conditions.html?hide-ui"
        localizationVersion:
          type: string
          example: 1.3.5
        dashboardBannerType:
          type: string
          description: Dashboard > Banner type
          enum:
            - type_1
            - type_2
            - type_3
          default: type_1
    FSLabel:
      type: string
      description: FSLabel
      enum:
        - users
        - UserId
        - InactiveDevices
        - DeviceId
        - devicesLogoutIssue
        - externalStreamId
        - errorLiveStream
        - appConfigs
        - remoteConfigs
        - iOSBuildNumberForceUpdate
        - iOSCurrentBuildNumber
        - isDisablePhoneLogin
        - interactions
        - emoticons
        - comments
        - latestComments
        - id
        - views
        - status
        - isDisabledComment
        - content
        - createdAt
        - user
        - totalReactions
        - totalUserChosen
        - advertisement
        - avatar
        - firstName
        - lastName
    HomeContentType:
      type: object
      properties:
        contentType:
          type: string
          enum:
            - livestream
            - playlist
            - ads
    HomeLiveStream:
      allOf:
        - $ref: "#/components/schemas/HomeContentType"
        - $ref: "#/components/schemas/VideoModel"
    HomeAds:
      allOf:
        - $ref: "#/components/schemas/HomeContentType"
        - $ref: "#/components/schemas/AdsModel"
    HomePlaylist:
      allOf:
        - $ref: "#/components/schemas/HomeContentType"
        - $ref: "#/components/schemas/PlaylistModel"
    HomeContent:
      type: object
      properties: null
      discriminator:
        propertyName: contentType
        mapping:
          livestream: "#/components/schemas/HomeLiveStream"
          playlist: "#/components/schemas/HomeAds"
          ads: "#/components/schemas/HomePlaylist"
      oneOf:
        - $ref: "#/components/schemas/HomeLiveStream"
        - $ref: "#/components/schemas/HomeAds"
        - $ref: "#/components/schemas/HomePlaylist"
    Keys:
      type: string
      description: Keys
      enum:
        - auth_token
        - curDeviceToken
        - refresh_token
        - expires_in
        - token
        - client_id
        - client_secret
        - grant_type
        - ExternalToken
        - Provider
        - scope
        - email
        - phoneNumber
        - password
        - oldPassword
        - newPassword
        - confirmPassword
        - firstName
        - lastName
        - avatarImage
        - username
        - access_token
        - result
        - lastAccessDate
        - firstInstall
        - device_id
        - device_type
        - source
        - externalStreamId
        - user_info
    LiveStreamState:
      type: integer
      description: LiveStreamState
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
      x-enum-varnames:
        - New
        - Loading
        - LoadedMetadata
        - PlayingTrailer
        - NoTrailer
        - Streaming
        - Ended
        - EndedWhenLaunchFromPN
        - Unpublished
        - Error
    LiveStreamBanner:
      type: object
      description: LiveStreamBanner
      properties:
        videos:
          type: array
          items:
            $ref: "#/components/schemas/VideoModel"
          default: []
          nullable: false
        cover:
          $ref: "#/components/schemas/CoverModel"
          default: {}
    LoadingState:
      type: integer
      description: LoadingState
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
      x-enum-varnames:
        - New
        - Loading
        - LoadingMore
        - PullToRefresh
        - InvalidToken
        - Finish
        - Error
        - Empty
        - End
        - UserSuspended
        - UserHasLoggedInAnotherDevice
      default: 0
    MobileCredentials:
      type: object
      description: Mobile Credentials
      properties:
        phone:
          type: string
        password:
          type: string
    MomoPaymentParam:
      type: string
      description: MomoPaymentParam
      enum:
        - merchantcode
        - merchantname
        - merchantnamelabel
        - appScheme
        - orderId
        - amount
        - orderLabel
        - description
        - fee
        - username
        - extra
        - action
    NotificationName:
      type: string
      description: NotificationName
      enum:
        - RequestReachOffline
        - ChangePassword
        - InvalidToken
        - ServerDown
        - ReachabilityChanged
    NetworkState:
      type: string
      enum:
        - online
        - offline
    NetworkStateResult:
      type: object
      properties:
        time:
          type: string
          format: date-time
        state:
          $ref: "#/components/schemas/NetworkState"
    PaymentModel:
      type: object
      description: PaymentModel
      properties:
        id:
          type: string
          default: ""
        thumbnailUrl:
          type: string
          default: ""
        ticketImage:
          type: string
          default: ""
        title:
          type: string
          default: ""
        channel:
          type: string
          default: ""
        liveStreamTime:
          type: string
          format: date-time
        ticketFee:
          type: integer
          default: 0
        liveStreamId:
          type: string
          default: ""
    PlatformParameter:
      type: string
      description: PlatformParameter
      enum:
        - APP
        - WEB
    StatusCode:
      type: integer
      description: StatusCode
      enum:
        - 200
        - 201
        - 400
        - 401
        - 403
        - 404
        - 500
        - 503
      default: -1
      x-enum-varnames:
        - success
        - success201
        - wrongParams
        - wrongToken
        - noRight
        - notFound
        - serverError
        - serverDown
    TransactionModel:
      type: object
      description: TransactionModel
      properties:
        id:
          type: string
          default: ""
        liveStreamId:
          type: string
          default: ""
        title:
          type: string
          default: ""
        paymentMethod:
          type: string
          default: ""
        price:
          type: integer
          default: 0
        thumbnailUrl:
          type: string
          default: ""
        ticketImage:
          type: string
          default: ""
        liveStreamStartTime:
          type: string
          format: date-time
        createdPurchase:
          type: string
          format: date-time
    ThumbnailVariant:
      type: string
      description: ThumbnailVariant
      enum:
        - url_60
        - url_120
        - url_180
        - url_240
        - url_360
        - url_480
      x-enum-varnames:
        - url_60
        - url_120
        - url_180
        - url_240
        - url_360
        - url_480
      example: "https://s1.dmcdn.net/v/SqB6s1WI9z6Sli26z/x180"
    UserState:
      type: string
      description: state of user
      enum:
        - nonSignedIn
        - signUp
        - verifyOtp
        - signedIn
        - inHome
    VideoParamsModel:
      type: object
      description: VideoParamsModel
      properties:
        videoId:
          type: string
          default: ""
        playlistId:
          type: string
          default: ""
        videoOrderingCriteria:
          $ref: "#/components/schemas/OrderCriteria"
    ChannelListDetails:
      type: object
      description: ChannelListDetails
      properties:
        channelName:
          type: string
          default: ""
        banner:
          type: string
          default: ""
        description:
          type: string
          default: ""
    PaymentError:
      allOf:
        - $ref: "#/components/schemas/ErrorDetails"
    PaypalParameter:
      type: object
      properties:
        nonce:
          type: string
          default: ""
        amountUSD:
          type: number
          format: double
          default: 0
        username:
          type: string
          default: ""
        liveStreamId:
          type: string
          default: ""
        deviceId:
          type: string
          default: ""
    MoMoParameters:
      type: object
      properties:
        phoneNumber:
          type: string
          default: ""
        token:
          type: string
          default: ""
    CommentState:
      type: object
      description: Comment Status
      properties:
        createComment:
          type: boolean
          default: false
        loadmoreComment:
          type: boolean
          default: false
        commentId:
          type: string
          default: ""
        initCommentLiveStream:
          type: boolean
          default: false
        addCommentLiveStream:
          type: boolean
          default: false
    GetLiveStreamStatus:
      type: object
      description: GetLiveStreamStatus
      properties:
        liveStreamId:
          type: string
          default: ""
        liveStreamStatus:
          $ref: "#/components/schemas/LiveStreamStatus"
        error:
          type: string
          default: ""
    CommentLiveStreamModel:
      type: object
      description: CommentLiveStreamModel
      properties:
        id:
          type: string
        content:
          type: string
        user:
          $ref: "#/components/schemas/User"
    LiveStreamFireStoreParameters:
      type: object
      description: LiveStreamFireStoreParameters
      properties:
        externalStreamId:
          type: string
        isDisabledComment:
          type: boolean
        comments:
          type: array
          items:
            $ref: "#/components/schemas/CommentLiveStreamModel"
        latestComments:
          type: array
          items:
            $ref: "#/components/schemas/CommentLiveStreamModel"
        id:
          type: string
        source:
          type: string
        views:
          type: integer
        status:
          type: string
        emoticons:
          type: array
          items:
            type: object
            properties:
              totalUsersChosen:
                type: integer
              totalReactions:
                type: integer
              id:
                type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    AppId:
      name: appId
      in: header
      required: true
      schema:
        type: string
      example: NewApp
  responses:
    ResponseDefault:
      description: Response Default
      content:
        application/json:
          schema:
            type: object
            description: Error
            properties:
              errorCode:
                $ref: "#/components/schemas/ErrorCode"
                nullable: true
              errorMessage:
                type: string
                nullable: true
                default: ""
              data:
                type: object
                additionalProperties: true
                nullable: true
                default: {}
    UnauthorizedError:
      description: Access token is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string
    UnexpectedError:
      description: Unexpected error.
    Error:
      description: Error response
      content:
        application/json:
          schema:
            type: object
            description: Error
            properties:
              errorCode:
                $ref: "#/components/schemas/ErrorCode"
                nullable: true
              errorMessage:
                type: string
                nullable: true
                default: ""
