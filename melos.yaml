name: flux

packages:
  - packages/**
  - examples/**
  - ./**

ignore:
  # TODO Excluded pending CI fixes
  # - firebase_admob
  # - firebase_admob_example

ide:
  intellij:
    false
    # TODO(Salakar): more granular control
    # use_workspace_tasks: true
    # use_flutter_test_tasks: true
    # use_flutter_run_tasks: true
    # use_dart_test_tasks: false
  vscode:
    true
    # TODO(Salakar): more granular control
    # use_workspace_tasks: true
    # use_flutter_test_tasks: true
    # use_flutter_run_tasks: true
    # use_dart_test_tasks: false
    # use_recommended_settings: true

scripts:
  newcomer:
    run: |
      melos exec --scope="flux" -- \
        brew install starship
        pub global activate melos
        pub global activate mason
        pub global activate coverage
        pub global activate flutter_gen

  # we voluntarily do not use melos inside goldens
  postbootstrap: |
    flutter pub get

  format:
    run: |
      melos exec -c 1 -- "
        flutter format --set-exit-if-changed lib test
      "

  analyze:
    run: |
      melos exec -c 1 -- "
        flutter analyze lib test
      "
    description: |
      Run `dart analyze` in all packages.
       - Note: you can also rely on your IDEs Dart Analysis / Issues window.

  generate:
    run: |
      melos run generate:dart
      melos run generate:flutter

    description: Build all generated files for Dart & Flutter packages in this project.

  generate:dart:
    run: |
      melos exec -c 1 --depends-on="build_runner" --no-flutter -- "
        dart run build_runner build --delete-conflicting-outputs
      "
    description: Build all generated files for Dart packages in this project.

  generate:flutter:
    run: |
      melos exec -c 1 --depends-on="build_runner" --flutter -- "
        flutter pub run build_runner build --delete-conflicting-outputs
      "
    description: Build all generated files for Flutter packages in this project.

  generate:assets:
    run: |
      fluttergen -c pubspec.yaml
    description: Run Assets class generator

  generate:launcher_icons:
    run: |
      melos exec -c 1 --scope="flux" -- "
        flutter pub get
        flutter pub run flutter_launcher_icons:main
      "

  generate:api_provider:
    run: |
      melos exec -c 1 --scope="api_provider" -- "
        cd packages/api_provider
        (
          rm -rf doc && rm -rf lib/src && rm -rf test
          npm run buildv --verbose
          flutter pub get
          flutter packages pub run build_runner build --delete-conflicting-outputs
          flutter format lib test
        )
      "

  build:web:app:
    run: |
      flutter build web --release --target lib/main_development.dart
    description: Build web app

  build:web:story:
    run: |
      flutter build web --release --target lib/src/app_storyboard/app_storyboard.dart
    description: Build web story

  build:android:development:
    run: |
      flutter build apk \
      --flavor development \
      --target lib/main_development.dart \
    # --verbose

  build:ios:development:
    run: |
      flutter build ios \
      --flavor development \
      --target lib/main_development.dart \
      --dart-define test.alice.enabled=true \
      --no-codesign \
    # --verbose

  fb:emulator:start:
    run: |
      export GOOGLE_APPLICATION_CREDENTIALS=".firebase-configs/flux-dev-7d354-1a42fbae8175.json"
      firebase emulators:start --only hosting
    description: |
      Run emulator locally

  fb:hosting:deploy:
    run: |
      firebase deploy --only hosting:app
    description: |
      Run firebase deploy hosting app

  fb:hosting:deploy:story:
    run: |
      firebase deploy --only hosting:story
    description: |
      Run firebase deploy hosting story

  test:
    run: |
      melos run test:dart --no-select
      melos run test:flutter --no-select
    description: Run all Dart & Flutter tests in this project.

  test:dart:
    run: |
      melos exec  -c 1 --fail-fast -- "
        dart pub global activate coverage
        dart test --coverage="coverage"
        format_coverage --lcov --in=coverage --out=coverage.lcov --packages=.packages --report-on=lib
      "
    description: Run Dart tests for a specific package in this project.
    select-package:
      flutter: false
      dir-exists: test

  test:flutter:
    run: |
      melos exec --dir-exists="test" -c 1 --fail-fast -- "
        flutter test --coverage
      "
    description: Run Flutter tests for a specific package in this project.
    select-package:
      flutter: true
      dir-exists: test

  test:selective_unit_test:
    run: melos exec --dir-exists="test" --fail-fast -- flutter test --no-pub --coverage
    description: Run Flutter tests for a specific package in this project.
    select-package:
      flutter: true
      dir-exists: test

  postclean:
    run: |
      flutter clean && rm -rf ./build ./android/.gradle ./ios/.symlinks ./ios/Pods ./android/.idea ./.idea ./.dart-tool/build
