post:
  summary: Login status
  operationId: loginByExternalProvider
  description: Info for a specific pet
  tags:
    - Auth
  parameters:
    - $ref: ../../components/parameters/header/AppId.yaml

  requestBody:
    description: Optional description in *Markdown*
    required: true
    content:
      application/json:
        schema:
          $ref: ../../components/requestBody/LoginSocialParameters.yaml
    
  security:
    - bearerAuth: []
  responses:
    default:
      $ref: ../../components/responses/ResponseDefault.yaml
    200:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              successful:
                type: boolean
                default: false
              result:
                $ref: ../../components/responses/Credentials.yaml
                nullable: true
              errorCode:
                $ref: ../../components/schemas/ErrorCode.yaml
              errorMessage:
                type: string
                default: ''
    
    201:
      $ref: ../../components/responses/UnauthorizedError.yaml
    400:
      $ref: ../../components/responses/UnauthorizedError.yaml
    401:
      $ref: ../../components/responses/UnauthorizedError.yaml
    403:
      $ref: ../../components/responses/UnauthorizedError.yaml
    500:
      $ref: ../../components/responses/UnexpectedError.yaml
    503:
      $ref: ../../components/responses/UnexpectedError.yaml



# post:
#   tags:
#     - Authentication
#   description: login
#   responses:
#     '200':
#       description: OK



# func login(_ params: NSDictionary, completionHandler: @escaping AFRequest.CompletionHandler ) {
# 	AFRequest.post(endPoint: EndPoints.Auth.Login, params: params, completionHandler: completionHandler)
# }

# func loginFormEncoded(_ params: String?, completionHandler: @escaping AFRequest.CompletionHandler ) {
# 		AFRequest.postEncoded(endPoint: EndPoints.Auth.LoginFormEncoded, params: params, completionHandler: completionHandler)
# 	}
